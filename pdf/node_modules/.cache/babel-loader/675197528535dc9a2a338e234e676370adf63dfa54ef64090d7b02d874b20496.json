{"ast":null,"code":"var _jsxFileName = \"D:\\\\pdf-project\\\\pdf\\\\src\\\\Components\\\\PDFList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Document, Page } from 'react-pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PDFList({\n  pdfs,\n  setSelectedPdf\n}) {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\n  const [currentPdf, setCurrentPdf] = useState(null); // Store current PDF data\n\n  // Function to open the modal and load the selected PDF\n  const openModal = pdf => {\n    setCurrentPdf(pdf);\n    setIsModalOpen(true);\n  };\n\n  // Function to close the modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setCurrentPdf(null); // Clear current PDF data when closing\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-list\",\n    children: [pdfs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No PDFs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : pdfs.map(pdf => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-item\",\n      onClick: () => setSelectedPdf(pdf) // Click handler to select the PDF\n      ,\n      role: \"button\",\n      tabIndex: 0,\n      \"aria-label\": `Select PDF titled: ${pdf.title}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: pdf.thumbnail || '/path/to/fallback-image.jpg',\n        alt: pdf.title,\n        className: \"pdf-thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pdf.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pdf.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openModal(pdf),\n          children: \"Open PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, pdf.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)), isModalOpen && currentPdf && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: closeModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentPdf.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdf-viewer\",\n          children: /*#__PURE__*/_jsxDEV(Document, {\n            file: currentPdf.link,\n            children: /*#__PURE__*/_jsxDEV(Page, {\n              pageNumber: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(PDFList, \"a37WwGc4izbjTd6PSbF7lFQ9p7k=\");\n_c = PDFList;\nexport default PDFList;\nvar _c;\n$RefreshReg$(_c, \"PDFList\");","map":{"version":3,"names":["React","useState","Document","Page","jsxDEV","_jsxDEV","PDFList","pdfs","setSelectedPdf","_s","isModalOpen","setIsModalOpen","currentPdf","setCurrentPdf","openModal","pdf","closeModal","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","role","tabIndex","title","src","thumbnail","alt","author","id","file","link","pageNumber","_c","$RefreshReg$"],"sources":["D:/pdf-project/pdf/src/Components/PDFList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Document, Page } from 'react-pdf';\r\n\r\nfunction PDFList({ pdfs, setSelectedPdf }) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);  // State to control modal visibility\r\n  const [currentPdf, setCurrentPdf] = useState(null);  // Store current PDF data\r\n\r\n  // Function to open the modal and load the selected PDF\r\n  const openModal = (pdf) => {\r\n    setCurrentPdf(pdf);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Function to close the modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setCurrentPdf(null);  // Clear current PDF data when closing\r\n  };\r\n\r\n  return (\r\n    <div className=\"pdf-list\">\r\n      {pdfs.length === 0 ? (\r\n        <p>No PDFs found.</p>\r\n      ) : (\r\n        pdfs.map((pdf) => (\r\n          <div\r\n            key={pdf.id}\r\n            className=\"pdf-item\"\r\n            onClick={() => setSelectedPdf(pdf)} // Click handler to select the PDF\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            aria-label={`Select PDF titled: ${pdf.title}`}\r\n          >\r\n            <img\r\n              src={pdf.thumbnail || '/path/to/fallback-image.jpg'}\r\n              alt={pdf.title}\r\n              className=\"pdf-thumbnail\"\r\n            />\r\n            <div className=\"pdf-info\">\r\n              <h3>{pdf.title}</h3>\r\n              <p>{pdf.author}</p>\r\n              <button onClick={() => openModal(pdf)}>Open PDF</button> {/* Open PDF in modal */}\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n      {/* Modal for showing the PDF */}\r\n      {isModalOpen && currentPdf && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button className=\"close-btn\" onClick={closeModal}>Close</button>\r\n            <h2>{currentPdf.title}</h2>\r\n            <div className=\"pdf-viewer\">\r\n              <Document file={currentPdf.link}>\r\n                <Page pageNumber={1} />\r\n              </Document>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PDFList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}