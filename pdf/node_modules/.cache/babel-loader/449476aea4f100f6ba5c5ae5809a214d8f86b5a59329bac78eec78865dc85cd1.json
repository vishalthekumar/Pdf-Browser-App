{"ast":null,"code":"var _jsxFileName = \"D:\\\\pdf-project\\\\pdf\\\\src\\\\Components\\\\PDFList.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PDFList({\n  pdfs,\n  setSelectedPdf\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-list\",\n    children: pdfs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No PDFs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this) //if there is no pdfs\n    : pdfs.map(pdf => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-item\",\n      onClick: () => setSelectedPdf(pdf) // Click handler to select the PDF\n      ,\n      role: \"button\" // Role of the element is a button\n      ,\n      tabIndex: 0 // Make the div focusable for keyboard navigation\n      ,\n      \"aria-label\": `Select PDF titled: ${pdf.title}` // Accessibility improvement\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: pdf.thumbnail || '/path/to/fallback-image.jpg' // Fallback image if thumbnail is missing\n        ,\n        alt: pdf.title,\n        className: \"pdf-thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pdf.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pdf.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: pdf.link // Link to open\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Open PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, pdf.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = PDFList;\nexport default PDFList;\nvar _c;\n$RefreshReg$(_c, \"PDFList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PDFList","pdfs","setSelectedPdf","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","pdf","onClick","role","tabIndex","title","src","thumbnail","alt","author","href","link","id","_c","$RefreshReg$"],"sources":["D:/pdf-project/pdf/src/Components/PDFList.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction PDFList({ pdfs, setSelectedPdf }) {\r\n  return (\r\n    <div className=\"pdf-list\">\r\n      {pdfs.length === 0 ? (\r\n        <p>No PDFs found.</p> //if there is no pdfs\r\n      ) : (\r\n        pdfs.map((pdf) => (\r\n          <div\r\n      key={pdf.id}\r\n            className=\"pdf-item\"\r\n            onClick={() => setSelectedPdf(pdf)} // Click handler to select the PDF\r\n            role=\"button\" // Role of the element is a button\r\n            tabIndex={0} // Make the div focusable for keyboard navigation\r\n            aria-label={`Select PDF titled: ${pdf.title}`} // Accessibility improvement\r\n          >\r\n            <img\r\n              src={pdf.thumbnail || '/path/to/fallback-image.jpg'} // Fallback image if thumbnail is missing\r\n              alt={pdf.title}\r\n              className=\"pdf-thumbnail\"\r\n            />\r\n            <div className=\"pdf-info\">\r\n              <h3>{pdf.title}</h3>\r\n              <p>{pdf.author}</p>\r\n              <a\r\n                href={pdf.link} // Link to open\r\n                \r\n              >\r\n                <button>Open PDF</button> {/* Button styled as a link */}\r\n              </a>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PDFList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAC;EAAEC,IAAI;EAAEC;AAAe,CAAC,EAAE;EACzC,oBACEH,OAAA;IAAKI,SAAS,EAAC,UAAU;IAAAC,QAAA,EACtBH,IAAI,CAACI,MAAM,KAAK,CAAC,gBAChBN,OAAA;MAAAK,QAAA,EAAG;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IAAA,EAEtBR,IAAI,CAACS,GAAG,CAAEC,GAAG,iBACXZ,OAAA;MAEEI,SAAS,EAAC,UAAU;MACpBS,OAAO,EAAEA,CAAA,KAAMV,cAAc,CAACS,GAAG,CAAE,CAAC;MAAA;MACpCE,IAAI,EAAC,QAAQ,CAAC;MAAA;MACdC,QAAQ,EAAE,CAAE,CAAC;MAAA;MACb,cAAY,sBAAsBH,GAAG,CAACI,KAAK,EAAG,CAAC;MAAA;MAAAX,QAAA,gBAE/CL,OAAA;QACEiB,GAAG,EAAEL,GAAG,CAACM,SAAS,IAAI,6BAA8B,CAAC;QAAA;QACrDC,GAAG,EAAEP,GAAG,CAACI,KAAM;QACfZ,SAAS,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFV,OAAA;QAAKI,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBL,OAAA;UAAAK,QAAA,EAAKO,GAAG,CAACI;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBV,OAAA;UAAAK,QAAA,EAAIO,GAAG,CAACQ;QAAM;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBV,OAAA;UACEqB,IAAI,EAAET,GAAG,CAACU,IAAK,CAAC;UAAA;UAAAjB,QAAA,gBAGhBL,OAAA;YAAAK,QAAA,EAAQ;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,GArBPE,GAAG,CAACW,EAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsBF,CACN;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACc,EAAA,GAnCQvB,OAAO;AAqChB,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}