{"ast":null,"code":"var _jsxFileName = \"D:\\\\pdf-project\\\\pdf\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport PDFReader from './Components/PDFReader';\nimport PDFList from './Components/PDFList';\nimport Search from './Components/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pdfs, setPdfs] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedPdf, setSelectedPdf] = useState(null);\n\n  // Fetch PDF data from the API\n  useEffect(() => {\n    fetch('https://api.npoint.io/dee51ea017d20efdfcc8').then(response => response.json()).then(data => setPdfs(data)).catch(error => {\n      console.error('Error fetching PDFs:', error);\n      // Optionally show an error message or a fallback UI\n    });\n  }, []);\n\n  // Handle search filter (search by both title and author)\n  const filteredPdfs = pdfs.filter(pdf => (pdf.title || '').toLowerCase().includes(searchQuery.toLowerCase()) || (pdf.author || '').toLowerCase().includes(searchQuery.toLowerCase()));\n\n  // Handle selecting a PDF\n  const handleSelectPdf = pdf => {\n    setSelectedPdf(pdf);\n  };\n\n  // Reset selected PDF if no matching PDFs are found after search query change\n  useEffect(() => {\n    if (filteredPdfs.length === 0) {\n      setSelectedPdf(null); // If no PDFs match the search, reset the selected PDF\n    }\n  }, [searchQuery, filteredPdfs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PDF Browser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search PDFs by title or author...\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value),\n      className: \"search-bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), selectedPdf ? /*#__PURE__*/_jsxDEV(PDFReader, {\n      pdf: selectedPdf,\n      setSelectedPdf: setSelectedPdf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PDFList, {\n      pdfs: filteredPdfs,\n      setSelectedPdf: handleSelectPdf // Use the new handler for selection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"d5sZpGmOIGUkn6Ft7r022dZyzxc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PDFReader","PDFList","Search","jsxDEV","_jsxDEV","App","_s","pdfs","setPdfs","searchQuery","setSearchQuery","selectedPdf","setSelectedPdf","fetch","then","response","json","data","catch","error","console","filteredPdfs","filter","pdf","title","toLowerCase","includes","author","handleSelectPdf","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/pdf-project/pdf/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport PDFReader from './Components/PDFReader';\nimport PDFList from './Components/PDFList';\nimport Search from './Components/Search';\n\n\nfunction App() {\n  const [pdfs, setPdfs] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedPdf, setSelectedPdf] = useState(null);\n\n  // Fetch PDF data from the API\n  useEffect(() => {\n    fetch('https://api.npoint.io/dee51ea017d20efdfcc8')\n      .then((response) => response.json())\n      .then((data) => setPdfs(data))\n      .catch((error) => {\n        console.error('Error fetching PDFs:', error);\n        // Optionally show an error message or a fallback UI\n      });\n  }, []);\n\n  // Handle search filter (search by both title and author)\n  const filteredPdfs = pdfs.filter((pdf) =>\n    (pdf.title || '').toLowerCase().includes(searchQuery.toLowerCase()) ||\n    (pdf.author || '').toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  // Handle selecting a PDF\n  const handleSelectPdf = (pdf) => {\n    setSelectedPdf(pdf);\n  };\n\n  // Reset selected PDF if no matching PDFs are found after search query change\n  useEffect(() => {\n    if (filteredPdfs.length === 0) {\n      setSelectedPdf(null); // If no PDFs match the search, reset the selected PDF\n    }\n  }, [searchQuery, filteredPdfs]);\n\n  return (\n    <div className=\"App\">\n      <h1>PDF Browser</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search PDFs by title or author...\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n        className=\"search-bar\"\n      />\n      \n      {selectedPdf ? (\n        <PDFReader pdf={selectedPdf} setSelectedPdf={setSelectedPdf} />\n      ) : (\n        <PDFList\n          pdfs={filteredPdfs}\n          setSelectedPdf={handleSelectPdf} // Use the new handler for selection\n        />\n      )}\n    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}