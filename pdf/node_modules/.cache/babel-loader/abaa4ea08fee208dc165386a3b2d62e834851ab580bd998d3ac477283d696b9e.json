{"ast":null,"code":"var _jsxFileName = \"D:\\\\pdf-project\\\\pdf\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ListView from './ListView';\nimport ReaderView from './ReaderView';\nimport SearchBar from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pdfs, setPdfs] = useState([]);\n  const [selectedPdf, setSelectedPdf] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Fetch PDFs from API\n  useEffect(() => {\n    fetch('https://api.npoint.io/dee51ea017d20efdfcc8').then(response => response.json()).then(data => setPdfs(data));\n  }, []);\n\n  // Filter PDFs based on search term\n  const filteredPdfs = pdfs.filter(pdf => pdf.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PDF Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sear, {\n      archTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(ListView, {\n        pdfs: filteredPdfs,\n        setSelectedPdf: setSelectedPdf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), selectedPdf && /*#__PURE__*/_jsxDEV(ReaderView, {\n        pdfUrl: selectedPdf.pdfUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xw50z69+GWNbYTDdDs/x8UkyCFo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ListView","ReaderView","SearchBar","jsxDEV","_jsxDEV","App","_s","pdfs","setPdfs","selectedPdf","setSelectedPdf","searchTerm","setSearchTerm","fetch","then","response","json","data","filteredPdfs","filter","pdf","title","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Sear","archTerm","pdfUrl","_c","$RefreshReg$"],"sources":["D:/pdf-project/pdf/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ListView from './ListView';\nimport ReaderView from './ReaderView';\nimport SearchBar from './SearchBar';\n\nfunction App() {\n  const [pdfs, setPdfs] = useState([]);\n  const [selectedPdf, setSelectedPdf] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Fetch PDFs from API\n  useEffect(() => {\n    fetch('https://api.npoint.io/dee51ea017d20efdfcc8')\n      .then(response => response.json())\n      .then(data => setPdfs(data));\n  }, []);\n\n  // Filter PDFs based on search term\n  const filteredPdfs = pdfs.filter(pdf =>\n    pdf.title.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>PDF Project</h1>\n      <Sear   archTerm={setSearchTerm} />\n      <div className=\"container\">\n        <ListView pdfs={filteredPdfs} setSelectedPdf={setSelectedPdf} />\n        {selectedPdf && <ReaderView pdfUrl={selectedPdf.pdfUrl} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIT,OAAO,CAACS,IAAI,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAGX,IAAI,CAACY,MAAM,CAACC,GAAG,IAClCA,GAAG,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACZ,UAAU,CAACW,WAAW,CAAC,CAAC,CAC3D,CAAC;EAED,oBACElB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAAqB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBzB,OAAA,CAAC0B,IAAI;MAAGC,QAAQ,EAAEnB;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCzB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBrB,OAAA,CAACJ,QAAQ;QAACO,IAAI,EAAEW,YAAa;QAACR,cAAc,EAAEA;MAAe;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC/DpB,WAAW,iBAAIL,OAAA,CAACH,UAAU;QAAC+B,MAAM,EAAEvB,WAAW,CAACuB;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CA3BQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}