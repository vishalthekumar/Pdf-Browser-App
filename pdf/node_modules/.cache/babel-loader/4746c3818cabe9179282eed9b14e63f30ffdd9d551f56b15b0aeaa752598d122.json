{"ast":null,"code":"var _jsxFileName = \"D:\\\\pdf-project\\\\pdf\\\\src\\\\Components\\\\PDFList.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PDFList({\n  pdfs,\n  setSelectedPdf\n}) {\n  if (pdfs.length === 0) {\n    /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No PDFs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 8\n    }, this); //if pdf not found \n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-list\",\n    children: pdfs.map(({\n      id,\n      name,\n      author,\n      thumbnail,\n      published,\n      link\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-item\",\n      onClick: () => setSelectedPdf({\n        id,\n        name,\n        author,\n        thumbnail,\n        published,\n        link\n      }),\n      role: \"button\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: link,\n        cla: true,\n        alt: \"...\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: thumbnail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: published\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: link,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Open PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = PDFList;\nexport default PDFList;\nvar _c;\n$RefreshReg$(_c, \"PDFList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PDFList","pdfs","setSelectedPdf","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","id","name","author","thumbnail","published","link","onClick","role","src","cla","alt","height","href","_c","$RefreshReg$"],"sources":["D:/pdf-project/pdf/src/Components/PDFList.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction PDFList({ pdfs, setSelectedPdf }) \r\n{\r\n  if(pdfs.length===0) \r\n    {\r\n       <p>No PDFs found.</p>; //if pdf not found \r\n      }\r\n\r\n  return (\r\n    <div className=\"pdf-list\">\r\n      {pdfs.map(({ id, name, author, thumbnail, published, link }) => (\r\n        <div\r\n          key={id}\r\n          className=\"pdf-item\"\r\n          onClick={() => setSelectedPdf({ id, name, author, thumbnail, published, link })}\r\n          role=\"button\">\r\n\r\n<img src={link} cla alt=\"...\" height=\"200px\"/>\r\n          <h3>{name}</h3>\r\n          <p>{author}</p>\r\n          <p>{thumbnail}</p>\r\n          <p>{published}</p>\r\n          <a href={link}>\r\n            <button>Open PDF</button>\r\n          </a>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default PDFList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAC;EAAEC,IAAI;EAAEC;AAAe,CAAC,EACzC;EACE,IAAGD,IAAI,CAACE,MAAM,KAAG,CAAC,EAChB;IACG,aAAAJ,OAAA;MAAAK,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EACxB;EAEJ,oBACET,OAAA;IAAKU,SAAS,EAAC,UAAU;IAAAL,QAAA,EACtBH,IAAI,CAACS,GAAG,CAAC,CAAC;MAAEC,EAAE;MAAEC,IAAI;MAAEC,MAAM;MAAEC,SAAS;MAAEC,SAAS;MAAEC;IAAK,CAAC,kBACzDjB,OAAA;MAEEU,SAAS,EAAC,UAAU;MACpBQ,OAAO,EAAEA,CAAA,KAAMf,cAAc,CAAC;QAAES,EAAE;QAAEC,IAAI;QAAEC,MAAM;QAAEC,SAAS;QAAEC,SAAS;QAAEC;MAAK,CAAC,CAAE;MAChFE,IAAI,EAAC,QAAQ;MAAAd,QAAA,gBAEvBL,OAAA;QAAKoB,GAAG,EAAEH,IAAK;QAACI,GAAG;QAACC,GAAG,EAAC,KAAK;QAACC,MAAM,EAAC;MAAO;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpCT,OAAA;QAAAK,QAAA,EAAKQ;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACfT,OAAA;QAAAK,QAAA,EAAIS;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfT,OAAA;QAAAK,QAAA,EAAIU;MAAS;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBT,OAAA;QAAAK,QAAA,EAAIW;MAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBT,OAAA;QAAGwB,IAAI,EAAEP,IAAK;QAAAZ,QAAA,eACZL,OAAA;UAAAK,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA,GAZCG,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaJ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACgB,EAAA,GA5BQxB,OAAO;AA+BhB,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}